* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    touch-action: manipulation;
}

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #6e45e2, #88d3ce);
    color: white;
    overflow: hidden;
    touch-action: none;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow-y: auto;
}

#game-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    padding: 10px;
    max-width: 500px;
    margin: 0 auto;
    width: 100%;
}

#header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    margin-bottom: 15px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    position: relative; /* Needed for absolute positioning of combo display if desired */
}

#combo-display {
    font-size: 1.3rem;
    font-weight: bold;
    color: #ffeb3b; /* Yellow color for combo */
    opacity: 0; /* Initially hidden */
    transition: opacity 0.3s ease-in-out;
}
.controls {
    display: flex;
    justify-content: center;
    margin-top: 15px;
}

.tutorial-button {
    padding: 10px 20px;
    font-size: 1rem;
    background-color: #8BC34A; /* Green color */
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
    text-decoration: none;
}

.tutorial-button:hover {
    transform: scale(1.05);
    background-color: #AED581; /* Lighter green */
}
.combo-active {
    opacity: 1;
}

.combo-flash {
    animation: combo-flash-animation 0.5s ease-in-out;
}

@keyframes combo-flash-animation {
    0% { opacity: 0.5; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
    100% { opacity: 0.8; transform: scale(1); }
}

.combo-indicator {
    color: #ff9800; /* Orange color for combo in score */
    font-size: 0.8em;
    font-weight: normal;
}

#score {
    font-size: 1.5rem;
    font-weight: bold;
}

#best-score {
    font-size: 1.2rem;
}

#game-board {
    background-color: rgba(255, 255, 255, 0.15);
    border-radius: 15px;
    padding: 10px;
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    grid-template-rows: repeat(9, 1fr);
    gap: 3px;
    aspect-ratio: 1/1;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    touch-action: none;
    margin: 0 auto;
    width: 100%;
    max-width: 500px;
}

.cell {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
    position: relative;
    aspect-ratio: 1/1;
}

.cell.highlight {
    background-color: rgba(255, 255, 255, 0.3);
    box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.8);
}

.block {
    position: absolute;
    border-radius: 4px;
    box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.5);
    transition: all 0.2s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

.block.cleared {
    transform: scale(0);
    opacity: 0;
}

#blocks-container {
    margin-top: 20px;
    display: flex;
    justify-content: space-around;
    perspective: 1000px;
}

.block-option {
    background-color: rgba(255, 255, 255, 0.15);
    border-radius: 10px;
    padding: 15px; /* Increased padding here */
    display: grid;
    gap: 2px;
    margin: 0 5px;
    cursor: grab;
    transition: transform 0.3s ease, opacity 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    z-index: 1;
    justify-content: center; /* Center the grid within the larger box */
    align-items: center;    /* Center the grid within the larger box */
}

.block-option:hover {
    transform: translateY(-5px);
}

.block-option.dragging {
    opacity: 0.8;
    transform: scale(1.2);
    cursor: grabbing;
    z-index: 100;
}

.block-option .block-cell {
    width: 20px;
    height: 20px;
    border-radius: 2px;
    box-shadow: inset 0 0 5px rgba(255, 255, 255, 0.3);
}

#game-over, #level-complete {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 10;
    display: none;
}

#game-over h2, #level-complete h2 {
    font-size: 2rem;
    margin-bottom: 20px;
    text-align: center;
}

#final-score {
    font-size: 1.5rem;
    margin-bottom: 30px;
}

#restart-btn {
    padding: 15px 30px;
    font-size: 1.2rem;
    background-color: #f368e0;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
}

#restart-btn:hover {
    transform: scale(1.05);
    background-color: #ff9ff3;
}

.sparkle {
    position: absolute;
    pointer-events: none;
    border-radius: 50%;
    background-color: white;
    z-index: 5;
    animation: sparkle 0.8s forwards;
}

.floating-block {
    transition: left 0.1s ease-out, top 0.1s ease-out;
    will-change: transform, left, top;
    transform-origin: center center;
}
.block.placed {
    transform: scale(0.8);
    opacity: 0.8;
}

.block.placed.placed-animation {
    animation: place-block 0.2s ease-out forwards;
}
/* Extravagant clear animation for individual blocks */
.block.cleared-extravagant {
    animation: clear-block-extravagant 0.5s ease-in-out forwards;
}

@keyframes clear-block-extravagant {
    0% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
    50% {
        transform: scale(1.5) rotate(180deg);
        opacity: 0.5;
    }
    100% {
        transform: scale(0) rotate(360deg);
        opacity: 0;
    }
}

/* Row clearing animation */
.block.row-clearing-animation {
    animation: row-clear-flash 0.4s ease-in-out;
}

@keyframes row-clear-flash {
    0%, 100% {
        opacity: 1;
        transform: translateX(0);
    }
    50% {
        opacity: 0.2;
        transform: translateX(10px); /* Slight horizontal shift */
    }
}

/* Column clearing animation */
.block.col-clearing-animation {
    animation: col-clear-flash 0.4s ease-in-out;
}

@keyframes col-clear-flash {
    0%, 100% {
        opacity: 1;
        transform: translateY(0);
    }
    50% {
        opacity: 0.2;
        transform: translateY(10px); /* Slight vertical shift */
    }
}

/* Extravagant sparkle animation */
.sparkle-extravagant {
    position: absolute;
    pointer-events: none;
    border-radius: 50%;
    background-color: white;
    z-index: 10; /* Ensure they are on top */
    animation: sparkle-fade 0.6s forwards ease-out, sparkle-move 0.6s forwards ease-out;
}

@keyframes sparkle-fade {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@keyframes sparkle-move {
    0% {
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        transform: translate(-50%, -50%) scale(0.5) translate(var(--sparkle-end-x), var(--sparkle-end-y));
    }
}
@keyframes place-block {
    0% {
        transform: scale(0.8);
        opacity: 0.8;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.block.cleared {
    transform: scale(0);
    opacity: 0;
    transition: transform 0.2s ease-in, opacity 0.2s ease-in; /* Added transition */
}
@keyframes sparkle {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 0;
    }
}

@media (max-height: 700px) {
    #blocks-container .block-option .block-cell {
        width: 15px;
        height: 15px;
    }
}

/* Fix for mobile orientation changes */
@media (orientation: portrait) {
    #game-board {
        width: 100%;
    }
}

@media (orientation: landscape) and (max-height: 500px) {
    #game-container {
        flex-direction: row;
        align-items: center;
        max-width: 100%;
    }
    
    #game-board {
        width: 60%;
        max-width: 400px;
    }
    
    #blocks-container {
        width: 30%;
        margin-top: 0;
        margin-left: 20px;
        flex-direction: column;
        height: 80vh;
        justify-content: space-between;
    }
    
    .block-option {
        margin: 10px 0;
    }
}